syntax = "proto3";
package dfinance.oracle.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

import "dfinance/oracle/oracle.proto";

option go_package = "github.com/dfinance/dstation/x/oracle/types";

// Msg defines the Oracle module Msg service.
service Msg {
  // SetOracle creates/updates an Oracle source (nominee authorized).
  rpc SetOracle(MsgSetOracle) returns (MsgSetOracleResponse);

  // SetAsset creates/updates an Asset (nominee authorized).
  rpc SetAsset(MsgSetAsset) returns (MsgSetAssetResponse);

  // PostPrice posts a raw price from a source (Oracle)
  rpc PostPrice(MsgPostPrice) returns (MsgPostPriceResponse);
}

// MsgSetOracle defines a SDK message to create/update an Oracle.
message MsgSetOracle {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // Nominee account address
  string nominee = 1 [
    (gogoproto.moretags) = "yaml:\"nominee\""
  ];

  // Target Oracle to create/update
  Oracle oracle = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"oracle\""
  ];
}

// MsgSetAsset defines a SDK message to create/update an Asset.
message MsgSetAsset {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // Nominee account address
  string nominee = 1 [
    (gogoproto.moretags) = "yaml:\"nominee\""
  ];

  // Target Asset to create/update
  Asset asset = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"asset\""
  ];
}

// MsgPostPrice defines a SDK message to post a raw price from source (Oracle).
message MsgPostPrice {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // Asset code (for ex.: btc_usdt)
  string asset_code = 1 [
    (gogoproto.customtype) = "github.com/dfinance/dstation/pkg/types.AssetCode",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"asset_code\""
  ];

  // Price source (Oracle address)
  string oracle_address = 2 [
    (gogoproto.moretags) = "yaml:\"oracle_address\""
  ];

  // The lowest seller price
  string ask_price = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags) = "yaml:\"ask_price\""
  ];

  // The highest buyer price
  string bid_price = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags) = "yaml:\"bid_price\""
  ];

  // Price timestamp
  google.protobuf.Timestamp received_at = 5 [
    (gogoproto.stdtime) = true,
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"received_at\""
  ];
}

message MsgSetOracleResponse {}

message MsgSetAssetResponse {}

message MsgPostPriceResponse {}