syntax = "proto3";
package dfinance.staker.v1beta1;

import "google/protobuf/timestamp.proto";
import "gogoproto/gogo.proto";

import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/dfinance/dstation/x/staker/types";

// CallSourceMeta keeps optional Call operation source data.
message CallSourceMeta {
  // Ethereum address
  string eth_address = 1;

  // Chain ID
  string chain_id = 2;
}

// Call keeps Staker operation data.
message Call {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  enum CallType {
    DEPOSIT = 0;
    WITHDRAW = 1;
  }

  // Call ID (series, defined by module)
  string id = 1 [
    (gogoproto.moretags) = "yaml:\"id\"",
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint"
  ];

  // Unique operation ID (defined by nominee)
  // Ethereum Tx for example
  string unique_id = 2 [
    (gogoproto.moretags) = "yaml:\"unique_id\""
  ];

  // Operation authorized by address
  string nominee = 3 [
    (gogoproto.moretags) = "yaml:\"nominee\""
  ];

  // Operation target account address
  string address = 4 [
    (gogoproto.moretags) = "yaml:\"address\""
  ];

  // Operation direction (mint / destroy)
  CallType type = 5 [
    (gogoproto.moretags) = "yaml:\"type\""
  ];

  // Call operation source data (optional)
  CallSourceMeta source_meta = 6 [
    (gogoproto.moretags) = "yaml:\"source_meta\"",
    (gogoproto.nullable) = false
  ];

  // Operation coins
  repeated cosmos.base.v1beta1.Coin amount = 7 [
    (gogoproto.moretags) = "yaml:\"amount\"",
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];

  // Operation createdAt
  google.protobuf.Timestamp timestamp = 8 [
    (gogoproto.moretags) = "yaml:\"timestamp\"",
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true
  ];
}