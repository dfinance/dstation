name: Tests & CrossBuild & DockerBuild

on: [push]

jobs:
  lint:
    name: Linter checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.32
          args: --exclude 'unused' --timeout=10m

  test:
    name: Unit tests & Integration tests
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        go:
          - 1.15.13
        os:
          - ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Go toolchain
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Get dependencies
        run: |
          go mod download

      - name: Run tests
        run: |
          make tests

  release-build:
    name: Release Build
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/work/dstation/dstation
      working-directory: src/github.com/${{ github.repository }}

    steps:
      - name: Install Go toolchain
        uses: actions/setup-go@v2
        with:
          go-version: 1.15.13

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          path: ${{ env.working-directory }}

      - name: Binaries crossbuild
        working-directory: ${{ env.working-directory }}
        run: |
          make build-binaries

      - name: GitHub Release
        uses: softprops/action-gh-release@v1
        if: success() && startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: |
            ${{ env.GOPATH }}/${{ env.working-directory }}/builds/dstation-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: '[OwnRegistry] Build and push docker image'
        uses: dfinance/gh-actions@master
        with:
          name: registry.wings.toys/dfinance/dstation
          username: ${{ secrets.OWN_REGISTRY_USR }}
          password: ${{ secrets.OWN_REGISTRY_PWD }}
          dockerfile: Dockerfile
          build_params: --build-arg CI_PIPELINE_ID=${{ github.run_id }} --build-arg CI_COMMIT_REF_NAME=${{ github.ref }} --build-arg CI_COMMIT_SHA=${{ github.sha }}
          registry: registry.wings.toys
          cache: true
